#include <iostream>
#define INF 1000000000

using namespace std;

int a[100005];
int minn[400005];
int maxx[400005];
int n,x,y;

void build (int node, int l , int r){
   if(l == r){
       minn[node] = a[l];
       maxx[node] = a[l];
   }
   else{
       int mid = (l+r)/2;
       build(node*2,l,mid);
       build(node*2+1,mid+1,r);
       minn[node] = min(minn[node*2],minn[node*2+1]);
       maxx[node] = max(maxx[node*2],maxx[node*2+1]);
   }
}

int query_for_minn (int node , int l , int r, int ql, int qr){
   if(l > qr || r < ql){
       return INF;
   }
   if(ql <= l && r <= qr){
       return minn[node];
   }
   else{
       int mid = (l+r)/2,ls=INF,rs=INF;
       ls = query_for_minn(node*2,l,mid,ql,qr);
       rs = query_for_minn(node*2+1,mid+1,r,ql,qr);
       return min(ls , rs);
   }
}

int query_for_maxx (int node , int l , int r, int ql, int qr){
   if(l > qr || r < ql){
       return -INF;
   }
   if(l >= ql && r <= qr){
       return maxx[node];
   }
   else{
       int mid = (l+r)/2,ls=-INF,rs=-INF;
       ls = query_for_maxx(node*2,l,mid,ql,qr);
       rs = query_for_maxx(node*2+1,mid+1,r,ql,qr);
       return max(ls , rs);
   }
}

void update (int node , int l , int r, int idx, int val){
   if(l==r && l == idx){
       minn[node] = val;
       maxx[node] = val;
   }
   else{
       int mid = (l+r)/2;

       if(idx <= mid){
           update(node*2,l,mid,idx,val);
       }
       else{
           update(node*2+1,mid+1,r,idx,val);
       }

       minn[node] = min(minn[node*2],minn[node*2+1]);
       maxx[node] = max(maxx[node*2],maxx[node*2+1]);
   }
}

int main()
{
   for(long long i = 1; i <= 100000; i++)
       a[i] = (i * i) % 12345 + (i*i*i) % 23456;
   build(1,1,100000);

   cin>>n;

   /*
   for(int i = 1; i <= n; i++){
           cin>>a[i];
   }*/


   for(int i = 1; i <= n; i++){
       cin>>x>>y;

       if(x > 0){
           int a = query_for_maxx(1,1,100000,x,y);
           int b = query_for_minn(1,1,100000,x,y);
           cout<<a-b<<endl;
       }
       else{
           update(1,1,100000,-x,y);
       }
   }



   return 0;
}