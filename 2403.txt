#include <iostream>
#include <stack>
#include <cstring>

using namespace std;

int n,m;
int a[100][100];
int b[100][100];
bool used[101];
int x,y;
int cnt;
stack <int> s;

void dfs (int x){
   used[x] = 1;

   for(int i = 1; i <= n; i++){
       if(a[x][i] == 1 && used[i] == 0){
           dfs(i);
       }
   }

   s.push(x);
}

void dfs2 (int x){
   used[x] = 1;

   for(int i = 1; i <= n; i++){
       if(b[x][i] == 1 && used[i] == 0){
           dfs2(i);
       }
   }
}

int main()
{
   cin>>n>>m;
   for(int i = 1; i <= m; i++){
       cin>>x>>y;
       a[x][y] = 1;
   }

   dfs(1);

   for(int i = 1; i <= n; i++){
       if(used[i] == 0){
           dfs(i);
       }
   }

   for(int i = 1; i <= n; i++){
       for(int j = 1; j <= n; j++){
           if(a[i][j] == 1){
               b[j][i] = 1;
           }
       }
   }

   memset(used , 0, sizeof(used));

   while(!s.empty()){
       if(used[s.top()] == 0){
           dfs2(s.top());
           cnt++;
       }

       s.pop();
   }

   cout<<cnt<<endl;

   return 0;
}